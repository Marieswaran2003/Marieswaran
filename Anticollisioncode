#include <Wire.h>  //used for I2C communication typially connect and communicate between senors and displays.
#include <LiquidCrystal.h>  //used for controlling and displaying text on a 16x2 character LCD.

LiquidCrystal lcd(2, 3, 4, 5, 6, 7);  //This line initializes the lcd object of the LiquidCrystal class, specifying the pins for data and control lines of the LCD.
int triggerPin = 10;  //These lines declare two integer variables to store the pin numbers used for a trigger 
int echoPin = 9;  //echo for ultrasonic sensor
float durationMicroSec, d;   //two floating-point variables to store the duration of a pulse and the calculated distance.

void setup() 
{
   Wire.begin();
pinMode(8,OUTPUT);
pinMode(12,OUTPUT);
pinMode(triggerPin, OUTPUT);
  pinMode(echoPin, INPUT);
lcd.begin(16,2);
     lcd.setCursor(0,0);
    lcd.print("  ANTI COLLISION ");
     lcd.setCursor(0,1);
     lcd.print("     SYSTEM ");
    delay(1000);
   Serial.begin(9600);  // Initializes serial communication at a baud rate of 9600.

void loop() 
{
   
float c= analogRead(A0); //Reads an analog value from pin A0 and stores it in the variable c.

delay(100);

c = c * (5.0 / 1023.0);
delay(100); 

  digitalWrite(triggerPin, HIGH); //These lines send a trigger signal to the ultrasonic sensor 
  delayMicroseconds(10);   //create a brief delay of 10 microseconds.

  digitalWrite(triggerPin, LOW);  //Turns off the trigger signal.

  durationMicroSec = pulseIn(echoPin, HIGH);  //Measures the duration of the echo signal from the ultrasonic sensor and stores it in durationMicroSec.
  d= 0.017 * durationMicroSec; //Converts the duration into distance (in centimeters) and stores it in the variable d.


 lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("D:");
   lcd.print(d);
lcd.setCursor(9,0);
lcd.print("I:"); 
lcd.print(c); 
lcd.setCursor(0,1);
lcd.print("axil:"); 
lcd.print(az); 

delay(1500);



if(d<10)
{

 analogWrite(11,64);
}

else if(c>3)
{

 analogWrite(12,127);
}
else if(az<0)
{

  digitalWrite(8,HIGH);
  Serial.println("AT");
delay(500);

else
{
  digitalWrite(8,LOW);
  analogWrite(11, 255);
   analogWrite(12,255);
}

}
The if statements check the value of d, c, and az and perform different actions based on their values. 
Depending on the conditions, LEDs are turned on, off, or analog signals are sent to specific pins.

It's important to note that there are a few issues in the code, such as missing closing braces for the setup() function 
loop() function, and missing } for some if statements. These issues need to be fixed for the code to compile and run correctly.
